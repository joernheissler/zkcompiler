// TODO: intervalle anpassen
G_epsilon = Z (2, 0x1000000000000000);
G_xi      = Z (0, 0x10000000000000000000000000000000000000000000000000000000000000000
                     0000000000000000000000000000000000000000000000000000000000000000
                     0000000000000000000000000000000000000000000000000000000000000000
                     0000000000000000000000000000000000000000000000000000000000000000);
G_varsigma= Z (0, 0x20000000000000000000000000010000000000000000000000000000000000000
                     000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFE
                     FFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                     FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF);
G_kappahat = Z(0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7976be11cd5900a8657793546c4c7ac62f68ff94c35a44564d77f2cecdf43eb49b7f7b3d6683c7248815e34ce0f2a43d151d19318d993de
                    398e30801d6c73ac841b3f3c0705dc661783189c0d06b0c510db690c4ff0d73b2f4baebc75518f63ac5627f309a7ebb31185a6edda10d7f
                    bcecc61e28bd76928efdec955a86b3ecb0);
G_alpha   = Z (0, 123456);
G_kappabar= Z (0, 0x7976be11cd5900a8657793546c4c7ac62f68ff94c35a44564d77f2cecdf43eb49b7f7b3d6683c7248815e34ce0f2a43d151d19318d993de
                    398e30801d6c73ac841b3f3c0705dc661783189c0d06b0c510db690c4ff0d73b2f4baebc75518f63ac5627f309a7ebb31185a6edda10d7f
                    bcecc61e28bd76928efdec955a86b3ecb0);
G_wii     = Z (0, 123201);
G_wi      = Z (0, 351);
G_p       = Z (0, 1234567);
G_pp      = Z (0, 433333017);
G_intrnd  = Z (0, 9876543210);

G_gammahat_1 = Z (0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF);
G_gammahat_3 = Z (0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF);
G_gammabar = Z (0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF);
G_delta_1 = Z (0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF);
G_gammahat_2 = Z (0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF);
G_gammahat_4 = Z (0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF);
G_lambda = Z (0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF);
G_nuhat = Z (0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff20000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFFFFFFFFFF);

G_int = (G_wii, G_wi, G_p, G_pp);
G_int2 = (G_int, G_int, G_int, G_int, G_intrnd);
//          0      1      2      3        4

//                                                                                                                |                                                                       |
G = (G_alpha, G_epsilon, G_xi, G_varsigma, G_kappahat, G_kappabar, G_int2, G_gammahat_1, G_gammahat_3, G_gammabar, G_delta_1, G_gammahat_2, G_gammahat_3, G_gammahat_4, G_lambda, G_nuhat, G_delta_1, G_gammahat_2, G_gammahat_3, G_gammahat_4, G_lambda, G_nuhat);
//      0         1       2         3           4            5        6          7              8           9          10           11           12            13          14        15       16

H = Z_mul_n (0x7976be11cd5900a8657793546c4c7ac62f68ff94c35a44564d77f2cecdf43eb49b7f7b3d6683c7248815e34ce0f2a43d151d19318d993de398e30801d6c73ac841b3f3c0705dc661783189c0d06b0c510db690c4ff0d73b2f4baebc75518f63ac5627f309a7ebb31185a6edda10d7fbcecc61e28bd76928efdec955a86b3ecb1, qr);
H2 = Z_mul_n (7275204187999410427059895610027634459558553161630157053393527884285143747734745598824711952859336601070037136057785325622239247369130795776625674298544119872115418958238678842885023133874998986833487534189587792290015396720958720575344083325602517657114433867892784657940311843126925943247735324355545719770264808588097419189766879472399486197576260639556146498236662262117788690702035563997635913258612046956549183541451981474976666635924037792463030169705723040484549554585034903753914202466515212413890497529286173848806512823309357006340057658625942143254454758518990774121736561783528122609625141652964503245409, qr);

/*
H = Z_mul_n (21781425951298368348284024172290066979038879136514801121557864032716484893933124
14137670807361658167513888721447210302601466378934649078811198863801347656005605
94526947928292977971818766500621554667261821977483856409290399744830182075495945
37776930934845186775882181397583770278319945799195707233815680680507455273559292
92627555493069055684815135880554811934154202395742557093976580971301497434668022
90676710974964865699689084206302916829996503111508382644849087061846965063963874
37488186473159175385765606887207865888053991430192385045675497674556524214729911
912533459262641535381146853153383431432356570684270391469, qr);

H2 = Z_mul_n (47443051647189403056963032452131805674376840917720734133205216261449837260107108
92147641075430562390513412171529912201584510244963363982084526585505203458367292
71681357277816524136136542020741525377151198002332240276462571217809197827136330
84291198176775677414850591260819276079356604866639006159567763086611199708270522
90309605548841763786412157138220102790254456983436327345389522635825701847517733
97748503806166699330635215422540799173044035100485504493850362057975537485122813
72416299910976083231159538272517541719906359060273093516182785031344311978400313
72419298503935298853720656295073960845888811387886853309688318857651313514605795
31469010029473341551726802962506639522310177211082714750118697321307113923440729
61067777014664361888809434594237002481948094218141614808651811496709163415049994
07001064167148891947899313442029372554463069881627198098425811497016591361948610
05245278556720298990468368076009663664945276825105716834329863937871992444736844
23965799988947084128363604618288863748020003251736729785231807491876343557959181
64867849717509852288438019048611905199372886257811557268335425043072420874985203
02758213156813566423660872312245096330529653386587163147781330101265992089801819
078319199562414171301138507977961, qr);
*/

H_Int2 = (H, H);
H_Int = (H_Int2, H_Int2, H_Int2, H_Int2);
Hx = (    H,               H,   H,   H_Int,   H,      H2,      H2,      H2,     H,         H,          H,     H,   H,          H,     H);
//   Cv^(e^(l_E)) * d^-1, Cts, Cts', {int}, CuiLS, CubarLS, CebarLS, CvbarLS, C_mhat, Cuprime_2LS, Cuprime_1, 1

H_Gint = (H_Int2, G_int);

H: a, b, d, f1, f2, g, h, h_1, h_2, ghat, hhat;
H2: gbar, hbar, ybar_1, ybar_2, ybar_3;

H: mhat_i;

H: Cv;
H: Cmhat;
H: hhk;
H: mhatprime1;
H: mhatprime2;
H: two;

G: w;
Hx: x;

phi_int [ H_Gint -> H_Int2 ] = [
                             f1 ^ $.1.1 + f2 ^ $.1.2,
                             $.0.0 ^ $.1.1 + f1 ^- $.1.0 + f2 ^- $.1.3
                            ];

phi0 [ G -> H ] = Cv ^ -$.1 + a ^ $.2 + b ^ $.3 + g ^ $.4 + f1 ^ $.0 + h ^ $.5;
phi1 [ G -> H ] = f1 ^ $.0 + f2 ^ $.6.4;
phi2 [ G -> H ] = f1 ^ ($.6.0.0 + $.6.1.0 + $.6.2.0 + $.6.3.0) + f2 ^ $.6.4;
phi3 [ G -> H_Int ] = [phi_int([x.3.0, $.6.0]), phi_int([x.3.1, $.6.1]), phi_int([x.3.2, $.6.2]), phi_int([x.3.3, $.6.3])];
// C_{u_i}^{\hat{m}_i} = \left( h_1^{\hat{m}_i} \right)^{\hat{\gamma}_1} g^{\hat{\kappa}}
phi4 [ G -> H ] = (h_1 ^ mhat_i) ^ $.7 + g ^ $.4;

// Verifiable Encryption
// \bar{u}^2 = \bar{g}^{2\bar{\gamma}}
phi5 [ G -> H2 ] = (gbar ^ two) ^ $.9;
// \bar{e}^2 = \bar{y}_1^{2\bar{\gamma}} \bar{h}^{2 \bar{\kappa}}
phi6 [ G -> H2 ] = (ybar_1 ^ two) ^ $.9 + (hbar ^ two) ^ $.5;
// \bar{v}^2 = (\bar{y}_2 \bar{y}_3^{\mathcal{H}_{\text{\texttt{hk}}}(\bar{u},\bar{e})})^{2\bar{\gamma}}
phi7 [ G -> H2 ] = ((ybar_2 + ybar_3 ^ hhk) ^ two) ^ $.9;

// Non-membership proofs
// C_{\hat{m}} = \hat{g}^{\hat{\kappa}} \hat{h}^{\hat{\gamma}_3}
phi8 [ G -> H ] = ghat ^ $.4 + hhat ^ $.8;

// 1
// C_{u_{2,j}'}^{\hat{m}'} g = \left( h_2^{\hat{m}'} \right)^{\hat{\gamma}_{2,j}} g^{\lambda_j}
phi9 [ G -> H ] = (h_2 ^ mhatprime1) ^ $.11 + g ^ $.14;
// C_{u_{1,j}'} = \hat{g}^{\delta_{1,j}} \hat{h}^{\hat{\gamma}_{4,j}}
phi10 [ G -> H ] = ghat ^ $.10 + hhat ^ $.13;
// 1 = \hat{g}^{\lambda_j} C_{\hat{m}}^{-\delta_{1,j}} h^{\hat{\nu}_j}
phi11 [ G -> H ] = ghat ^ $.14 + Cmhat ^ -$.10 + hhat ^ $.15;

// 2
// C_{u_{2,j}'}^{\hat{m}'} g = \left( h_2^{\hat{m}'} \right)^{\hat{\gamma}_{2,j}} g^{\lambda_j}
phi12 [ G -> H ] = (h_2 ^ mhatprime2) ^ $.17 + g ^ $.20;
// C_{u_{1,j}'} = \hat{g}^{\delta_{1,j}} \hat{h}^{\hat{\gamma}_{4,j}}
phi13 [ G -> H ] = ghat ^ $.16 + hhat ^ $.19;
// 1 = \hat{g}^{\lambda_j} C_{\hat{m}}^{-\delta_{1,j}} h^{\hat{\nu}_j}
phi14 [ G -> H ] = ghat ^ $.20 + Cmhat ^ -$.16 + hhat ^ $.21;


phi [ G -> Hx ] = [ phi0($), phi1($), phi2($), phi3($), phi4($), phi5($), phi6($), phi7($), phi8($),
                    phi9($), phi10($), phi11($),
					phi12($), phi13($), phi14($) ];


sigma = SigmaGsp [ phi, x, w, 0x10000000000000000000000000000000000000000, 123 ];

